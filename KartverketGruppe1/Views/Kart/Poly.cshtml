@model KartverketGruppe1.Data.Innmelding

@{
    ViewData["Title"] = "Innmelding av kartavvik";
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet.pm@latest/dist/leaflet.pm.css" />

<style>
    .map-container {
        display: flex;
        height: calc(100vh - 60px);
        width: 100%;
        position: absolute;
        top: 60px;
        left: 0;
    }

    .sidebar {
        width: 350px;
        background-color: #d8e3f2;
        padding: 20px;
        overflow-y: auto;
    }

    .search-panel h3 {
        font-size: 16px;
        margin-top: 20px;
        margin-bottom: 10px;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .map-content {
        flex: 1;
        position: relative;
        background-color: #e5e5e5;
    }

    #map {
        width: 100%;
        height: 100%;
    }

    .upload-box {
        border: 2px dashed #ccc;
        padding: 20px;
        text-align: center;
        border-radius: 4px;
        cursor: pointer;
    }
</style>

<div class="map-container">
    <div class="sidebar">
        <form id="innmeldingForm" asp-action="LagreInnmelding" asp-controller="Kart" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()

            @if (ViewData["Error"] != null)
            {
                <div class="alert alert-danger">
                    @ViewData["Error"]
                </div>
            }

            <!-- Skjulte felt -->
            <input type="hidden" asp-for="KoordinatID" id="KoordinatID" />
            <input type="hidden" asp-for="KommuneID" id="KommuneID" />
            <input type="hidden" asp-for="StatusID" value="3" />
            <input type="hidden" asp-for="PrioritetID" value="1" />
            <input type="hidden" asp-for="Dato" value="@DateTime.Now" />
            <input type="hidden" id="GeometryData" name="GeometryData" />
            <input type="hidden" id="GeometryType" name="GeometryType" />

            <!-- Stedsnavn søk -->
            <div class="form-group mb-3">
                <h3>Søk etter sted</h3>
                <div class="input-group">
                    <input type="text" class="form-control" id="SokeTekst" placeholder="Søk etter sted" />
                    <button type="button" class="btn btn-primary" onclick="sokStedsnavn()">Søk</button>
                </div>
            </div>

            <!-- Avvikstype -->
            <div class="form-group mb-3">
                <h3>Type avvik</h3>
                <select class="form-control" asp-for="AvvikstypeID" required>
                    <option value="">Velg type avvik</option>
                    @foreach (var type in ViewBag.Avvikstyper)
                    {
                        <option value="@type.Value">@type.Text</option>
                    }
                </select>
                <span asp-validation-for="AvvikstypeID" class="text-danger"></span>
            </div>

            <!-- Beskrivelse -->
            <div class="form-group mb-3">
                <h3>Beskrivelse av avvik</h3>
                <textarea class="form-control" asp-for="Innmeldingsbeskrivelse" rows="4" required
                          placeholder="Beskriv avviket så detaljert som mulig..."></textarea>
                <span asp-validation-for="Innmeldingsbeskrivelse" class="text-danger"></span>
            </div>

            <!-- Dokumentasjon -->
            <div class="form-group mb-3">
                <h3>Last opp dokumentasjon</h3>
                <div class="upload-box" onclick="document.getElementById('fileUpload').click()">
                    <img src="~/Images/UploadIcon.png" alt="Upload" />
                    <input type="file" id="fileUpload" name="file" accept="image/*" style="display: none;" />
                </div>
                <div id="fileName" class="mt-2"></div>
            </div>

            <!-- E-post for gjester -->
            @if (!User.Identity.IsAuthenticated)
            {
                <div class="form-group mb-3">
                    <label>Din e-post</label>
                    <input type="email" class="form-control" asp-for="Gjest_epost" required />
                    <span asp-validation-for="Gjest_epost" class="text-danger"></span>
                </div>
            }

            <button type="submit" class="btn btn-primary w-100" style="background-color: #8ebf94;">
                Send inn
            </button>
        </form>
    </div>

    <div class="map-content">
        <div id="map"></div>
    </div>
</div>

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.pm@latest/dist/leaflet.pm.min.js"></script>

    <script>
        var map = L.map('map').setView([58.164048, 8.004007], 13);
        var currentLayer = null;

        L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
            maxZoom: 18,
            attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        }).addTo(map);

        // Legger til tegne-verktøy
        map.pm.addControls({
            position: 'topleft',
            drawMarker: true,
            drawPolyline: true,
            drawPolygon: true,
            drawRectangle: false,
            drawCircle: false,
            drawCircleMarker: false,
            editMode: true,
            removalMode: true,
            cutPolygon: false,
        });



        map.on('pm:create', async function (e) {
            if (currentLayer) {
                map.removeLayer(currentLayer);
            }
            currentLayer = e.layer;

            let koordinater = "";
            let lat = 0;
            let lng = 0;
            let geometryType = e.shape;

            // Håndterer ulike geometri-typer
            if (e.shape === 'Marker') {
                lat = e.layer.getLatLng().lat;
                lng = e.layer.getLatLng().lng;
                koordinater = `${lat.toFixed(6)},${lng.toFixed(6)}`;
            }
            else if (e.shape === 'Polygon') {
                const coords = e.layer.getLatLngs()[0];
                koordinater = coords.map(coord =>
                    `${coord.lat.toFixed(6)},${coord.lng.toFixed(6)}`
                ).join(';');
                lat = coords[0].lat;
                lng = coords[0].lng;
            }
            else if (e.shape === 'Line' || e.shape === 'Polyline') {
                const coords = e.layer.getLatLngs();
                koordinater = coords.map(coord =>
                    `${coord.lat.toFixed(6)},${coord.lng.toFixed(6)}`
                ).join(';');
                lat = coords[0].lat;
                lng = coords[0].lng;
            }

            try {
                // Først henter vi kommune-info
                const kommuneResponse = await fetch(
                    `/api/Kommune/GetByCoordinate?lat=${lat}&lng=${lng}&koordsys=4258`
                );

                if (!kommuneResponse.ok) {
                    throw new Error('Kunne ikke hente kommuneinfo');
                }

                const kommuneData = await kommuneResponse.json();

                // Så lagrer vi alt
                const response = await fetch('/Kart/LagreKoordinatOgKommune', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({
                        latitude: lat,
                        longitude: lng,
                        koordinater: koordinater,
                        geometryType: geometryType,
                        kommunenummer: kommuneData.kommunenummer,
                        kommunenavn: kommuneData.kommunenavn
                    })
                });

                if (!response.ok) throw new Error('Kunne ikke lagre koordinater');

                const data = await response.json();
                document.getElementById('KoordinatID').value = data.koordinatId;
                document.getElementById('KommuneID').value = data.kommuneId;

            } catch (error) {
                console.error('Error:', error);
                alert('Det oppstod en feil ved lagring av koordinater. Vennligst prøv igjen.');
            }
        });



















    // I map.on('pm:create') hendelsen:
    // map.on('pm:create', async function (e) {
    //     if (currentLayer) {
    //         map.removeLayer(currentLayer);
    //     }
    //     currentLayer = e.layer;

    //     let koordinater = "";
    //     let lat = 0;
    //     let lng = 0;
    //     let geometryType = e.shape;

    //     // Håndterer ulike geometri-typer og lagrer i Koordinater-feltet
    //     if (e.shape === 'Marker') {
    //         lat = e.layer.getLatLng().lat;
    //         lng = e.layer.getLatLng().lng;
    //         koordinater = `${lat.toFixed(6)},${lng.toFixed(6)}`;
    //     }
    //     else if (e.shape === 'Polygon') {
    //         const coords = e.layer.getLatLngs()[0];
    //         koordinater = coords.map(coord =>
    //             `${coord.lat.toFixed(6)},${coord.lng.toFixed(6)}`
    //         ).join(';');
    //         lat = coords[0].lat;
    //         lng = coords[0].lng;
    //     }
    //     else if (e.shape === 'Line' || e.shape === 'Polyline') {
    //         const coords = e.layer.getLatLngs();
    //         koordinater = coords.map(coord =>
    //             `${coord.lat.toFixed(6)},${coord.lng.toFixed(6)}`
    //         ).join(';');
    //         lat = coords[0].lat;
    //         lng = coords[0].lng;
    //     }

    //     try {
    //         const response = await fetch('/Kart/LagreKoordinatOgKommune', {
    //             method: 'POST',
    //             headers: {
    //                 'Content-Type': 'application/json',
    //                 'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
    //             },
    //             body: JSON.stringify({
    //                 latitude: lat,
    //                 longitude: lng,
    //                 koordinater: koordinater,
    //                 geometryType: geometryType
    //             })
    //         });

    //         if (!response.ok) throw new Error('Kunne ikke lagre koordinater');

    //         const data = await response.json();
    //         document.getElementById('KoordinatID').value = data.koordinatId;
    //         document.getElementById('KommuneID').value = data.kommuneId;

    //     } catch (error) {
    //         console.error('Error:', error);
    //         alert('Det oppstod en feil ved lagring av koordinater. Vennligst prøv igjen.');
    //     }
    // });

        // Stedsnavn-søk
        async function sokStedsnavn() {
            const sokeTekst = document.getElementById('SokeTekst').value;
            if (!sokeTekst) return;

            try {
                const response = await fetch('/Kart/SokStedsnavn', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ SokeTekst: sokeTekst })
                });

                if (!response.ok) throw new Error('Søk feilet');

                const data = await response.json();
                if (data && data.length > 0) {
                    map.setView([data[0].nord, data[0].ost], 13);
                }
            } catch (error) {
                console.error('Søkefeil:', error);
                alert('Kunne ikke utføre søk. Prøv igjen.');
            }
        }

        // Filhåndtering
        document.getElementById('fileUpload').addEventListener('change', function (e) {
            const fileName = e.target.files[0]?.name;
            if (fileName) {
                document.getElementById('fileName').textContent = `Valgt fil: ${fileName}`;
            }
        });

        // Form validering
        document.getElementById('innmeldingForm').addEventListener('submit', function (e) {
            if (!document.getElementById('GeometryData').value) {
                e.preventDefault();
                alert('Vennligst marker på kartet først');
                return false;
            }

            const beskrivelse = document.querySelector('[name="Innmeldingsbeskrivelse"]').value.trim();
            if (!beskrivelse) {
                e.preventDefault();
                alert('Vennligst skriv en beskrivelse');
                return false;
            }
        });
    </script>
}


